{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michal_cfc/Michal/lex/components/Accordion/Accordion.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { AccordionContainer } from \"./Accordion.styles\";\nimport AccordionItem from \"./AccordionItem\";\n\nvar Accordion = function Accordion(_ref) {\n  _s();\n\n  var questions = _ref.questions;\n\n  var _useState = useState(null),\n      activeIndex = _useState[0],\n      setActiveIndex = _useState[1];\n\n  var renderedQuestionsAnswers = questions.map(function (item, index) {\n    var showDescription = index === activeIndex;\n    var ariaExpanded = index === activeIndex;\n    return /*#__PURE__*/_jsxDEV(AccordionItem, {\n      showDescription: showDescription,\n      ariaExpanded: ariaExpanded,\n      item: item,\n      index: index,\n      onClick: function onClick() {\n        setActiveIndex(index);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(AccordionContainer, {\n    children: renderedQuestionsAnswers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Accordion, \"E8kOn+IkK/htiBGEqJWkEvOqULU=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/media/michal_cfc/Michal/lex/components/Accordion/Accordion.tsx"],"names":["useState","AccordionContainer","AccordionItem","Accordion","questions","activeIndex","setActiveIndex","renderedQuestionsAnswers","map","item","index","showDescription","ariaExpanded"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SACIC,kBADJ,QAEO,oBAFP;AAIA,OAAOC,aAAP,MAA0B,iBAA1B;;AAIA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAEtC;AAAA;;AAAA,MADFC,SACE,QADFA,SACE;;AAAA,kBAEoCJ,QAAQ,CAAC,IAAD,CAF5C;AAAA,MAEKK,WAFL;AAAA,MAEkBC,cAFlB;;AAIF,MAAMC,wBAAwB,GAAGH,SAAS,CAACI,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC5D,QAAMC,eAAe,GAAGD,KAAK,KAAKL,WAAlC;AACA,QAAMO,YAAY,GAAGF,KAAK,KAAKL,WAA/B;AACA,wBACI,QAAC,aAAD;AACI,MAAA,eAAe,EAAEM,eADrB;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,IAAI,EAAEH,IAHV;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,OAAO,EAAE,mBAAM;AACXJ,QAAAA,cAAc,CAACI,KAAD,CAAd;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,aADJ;AAWH,GAdgC,CAAjC;AAgBA,sBACI,QAAC,kBAAD;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CA3BD;;GAAMJ,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\n\nimport {\n    AccordionContainer\n} from \"./Accordion.styles\"\n\nimport AccordionItem from \"./AccordionItem\"\n\nimport { AccordionProps } from './Accordion.d';\n\nconst Accordion: React.FC<AccordionProps> = ({\n    questions\n}) => {\n\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const renderedQuestionsAnswers = questions.map((item, index) => {\n        const showDescription = index === activeIndex;\n        const ariaExpanded = index === activeIndex;\n        return (\n            <AccordionItem\n                showDescription={showDescription}\n                ariaExpanded={ariaExpanded}\n                item={item}\n                index={index}\n                onClick={() => {\n                    setActiveIndex(index);\n                }}\n            />\n        );\n    });\n\n    return (\n        <AccordionContainer>\n            {renderedQuestionsAnswers}\n        </AccordionContainer>\n    )\n}\n\nexport default Accordion"]},"metadata":{},"sourceType":"module"}