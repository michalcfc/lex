{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/michal_cfc/Michal/lex/layout/Header/sub/Menu/Menu.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MenuWrapper, MenuItem } from \"./Menu.styles\";\nimport Link from 'next/link';\nimport Submenu from \"../Submenu\";\n\nvar Menu = function Menu(_ref) {\n  _s();\n\n  var links = _ref.links;\n\n  var _useState = useState(false),\n      isMenuOpen = _useState[0],\n      setMenuOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      subemnuId = _useState2[0],\n      setSubemnuId = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(MenuWrapper, {\n    children: links.map(function (link) {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        onMouseEnter: function onMouseEnter() {\n          setSubemnuId(link.id);\n          setMenuOpen(true);\n        } // onMouseLeave={() => {\n        //     setSubemnuId(link.id)\n        //     setMenuOpen(false)\n        // }}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"\".concat(link.url),\n          children: link.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, _this), link.hasSubmenu && isMenuOpen && link.id == subemnuId && /*#__PURE__*/_jsxDEV(Submenu, {\n          links: link.subLinks,\n          setMenuOpen: setMenuOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, _this)]\n      }, link.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 23\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Menu, \"8bl6e/rg7Afj4VibRvqK7s5WnYk=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/media/michal_cfc/Michal/lex/layout/Header/sub/Menu/Menu.tsx"],"names":["React","useState","MenuWrapper","MenuItem","Link","Submenu","Menu","links","isMenuOpen","setMenuOpen","subemnuId","setSubemnuId","map","link","id","url","name","hasSubmenu","subLinks"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,WADJ,EAEIC,QAFJ,QAGO,eAHP;AAKA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAE5B;AAAA;;AAAA,MADFC,KACE,QADFA,KACE;;AAAA,kBAEgCN,QAAQ,CAAC,KAAD,CAFxC;AAAA,MAEKO,UAFL;AAAA,MAEiBC,WAFjB;;AAAA,mBAGgCR,QAAQ,CAAC,IAAD,CAHxC;AAAA,MAGKS,SAHL;AAAA,MAGgBC,YAHhB;;AAKF,sBACI,QAAC,WAAD;AAAA,cACKJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAU;AAClB,0BAAO,QAAC,QAAD;AAEF,QAAA,YAAY,EAAE,wBAAM;AAChBF,UAAAA,YAAY,CAACE,IAAI,CAACC,EAAN,CAAZ;AACAL,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SALC,CAMF;AACA;AACA;AACA;AATE;AAAA,gCAWH,QAAC,IAAD;AAAM,UAAA,IAAI,YAAKI,IAAI,CAACE,GAAV,CAAV;AAAA,oBAA4BF,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,iBAXG,EAYLH,IAAI,CAACI,UAAL,IACMT,UADN,IAEMK,IAAI,CAACC,EAAL,IAAWJ,SAFjB,iBAGM,QAAC,OAAD;AACC,UAAA,KAAK,EAAEG,IAAI,CAACK,QADb;AAEC,UAAA,WAAW,EAAET;AAFd;AAAA;AAAA;AAAA;AAAA,iBAfD;AAAA,SACGI,IAAI,CAACC,EADR;AAAA;AAAA;AAAA;AAAA,eAAP;AAoBF,KArBA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AA0BH,CAjCD;;GAAMR,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n    MenuWrapper,\n    MenuItem,\n} from \"./Menu.styles\"\n\nimport Link from 'next/link'\n\nimport { MenuProps } from \"./Menu.d\"\nimport Submenu from \"../Submenu\";\n\n\nconst Menu: React.FC<MenuProps> = ({\n    links,\n}) => {\n\n    const [isMenuOpen, setMenuOpen] = useState(false)\n    const [subemnuId, setSubemnuId] = useState(null)\n\n    return (\n        <MenuWrapper>\n            {links.map((link) => {\n               return <MenuItem\n                    key={link.id}\n                    onMouseEnter={() => {\n                        setSubemnuId(link.id)\n                        setMenuOpen(true)\n                    }}\n                    // onMouseLeave={() => {\n                    //     setSubemnuId(link.id)\n                    //     setMenuOpen(false)\n                    // }}\n                    >\n                   <Link href={`${link.url}`}>{link.name}</Link>\n                {link.hasSubmenu\n                    && isMenuOpen\n                    && link.id == subemnuId\n                    && <Submenu\n                        links={link.subLinks}\n                        setMenuOpen={setMenuOpen}\n                    />}\n                </MenuItem>\n            })}\n        </MenuWrapper>\n    )\n}\n\nexport default Menu"]},"metadata":{},"sourceType":"module"}